<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="member">

<!--
	이 영역에 SQL문에 맞는 태그를 사용하여 SQL문을 기술한다.
	
	사용할 수 잇는 기본적인 태그들
	<select> ~~~ </select>
	<insert> ~~~ </insert>
	<update> ~~~ </update>
	<delete> ~~~ </delete>
	
	위 태그에서 사용되는 속성들
	1) id : 해당 태그를 호출할 때 <sqlMap>태그의 namespace와 연결하여 사용하는 이름
	
	2) parameterClass : sql문에 사용될 데이터가 들어있는 객체를 지정함.
						보통 VO클래스, 자바의 자료형이름 등이 사용된다.
						typeAlias로 지정한 alias명을 사용할 수 있다.
	
	3) resultClass속성 : select문을 실행한 결과를 담을 객체를 지정한다.
						보통 VO클래스나 자바의 자료형이름을 사용한다.
	
	4) resultMap : 결과 레코드 컬럼명과 VO객체의 속성명이 다를 경우에 적절한 매핑을 위해 사용된다. 
 -->
 	
 	<insert id="insertMember" parameterClass="kr.or.ddit.member.vo.MemberVO">
 	
 	INSERT INTO mymember (
 	mem_id,mem_name,mem_tel,mem_addr, atch_file_id)
 	VALUES (#memId#, #memName#, #memTel#, #memAddr#, #atchFileId#)
 	<!-- ## 안에 속성을 자동으로 찾아준다. (= mv.getMemId()) -->
 	
 	</insert>
 	
 	<update id="updateMember" parameterClass="memVO">
 	
 	UPDATE MYMEMBER
 	SET MEM_NAME = #memName#
 		, MEM_TEL = #memTel#
 		, MEM_ADDR = #memAddr#
 		, ATCH_FILE_ID = #atchFileId#
	WHERE MEM_ID = #memId#
 	
 	</update>
 	
 	<delete id="deleteMember" parameterClass="String">
 	
 	DELETE FROM MYMEMBER WHERE MEM_ID = #MEM_ID#
 	
 	</delete>
 	
<!--  	<select id="getMemberAll" resultClass="memVO"> -->
 	
<!--  	SELECT MEM_ID AS memId -->
<!--  		, MEM_NAME memName -->
<!--  		, MEM_TEL memTel -->
<!--  		, MEM_ADDR memAddr -->
<!--  	FROM MYMEMBER -->
 	
<!--  	</select> -->
 	
 	<resultMap class="memVO" id="memMap">
 		<result property="memId" column="mem_id"/>
 		<result property="memName" column="mem_name"/>
 		<result property="memTel" column="mem_tel"/>
 		<result property="memAddr" column="mem_addr"/>
 		<result property="atchFileId" column="atch_file_id"/>
 	</resultMap>
 	
 	<select id="getMemberAll" resultMap="memMap">
 	
 	SELECT *
 	FROM MYMEMBER
 	
 	</select>
 	
 	<select id="getMember" parameterClass="String" resultMap="memMap">
 	
 	SELECT *
 	FROM MYMEMBER
 	WHERE MEM_ID = #memId#
 	
 	</select>

<!--  	<select id="getMember" parameterClass="String" resultClass="hashMap"> -->
 	
<!--  	SELECT * -->
<!--  	FROM MYMEMBER -->
<!--  	WHERE MEM_ID = #memId# -->
 	
<!--  	</select> -->
 	
 	<select id="checkMember" resultClass="int">
 	
 	SELECT COUNT(*) AS CNT
 	FROM MYMEMBER
 	WHERE MEM_ID = #memId#
 	
 	</select>
 	
 	
 	<select id="searchMember" parameterClass="memVO" resultMap="memMap">
 	
 	SELECT *
 	FROM MYMEMBER
	WHERE 1=1
	<isNotEmpty property="memId">
		AND MEM_ID = #memId#
	</isNotEmpty>
	<isNotEmpty property="memName">
		AND MEM_NAME = #memName#
	</isNotEmpty>
	<isNotEmpty property="memTel">
		AND MEM_TEL = #memTel#
	</isNotEmpty>
	<isNotEmpty property="memAddr">
		AND MEM_ADDR LIKE '%' || #memAddr# || '%'
	</isNotEmpty>
	 	
 	</select>
</sqlMap>